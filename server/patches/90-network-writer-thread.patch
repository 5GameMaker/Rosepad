java/net/minecraft/src/NetworkWriterThread.java
12 - Object object1 = NetworkManager.threadSyncObject;
12 - synchronized (NetworkManager.threadSyncObject) {
12 - ++NetworkManager.numWriteThreads;
12 - }
12 - // monitorexit(NetworkManager.threadSyncObject)
12 - while (true) {
12 - boolean z11 = false;
12 - try {
12 - z11 = true;
12 - if (!NetworkManager.isRunning(this.netManager)) {
12 - z11 = false;
12 - }
12 - NetworkManager.sendNetworkPacket(this.netManager);
12 - }
12 - finally {
12 - if (z11) {
12 - final Object object2 = NetworkManager.threadSyncObject;
12 - synchronized (NetworkManager.threadSyncObject) {
12 - --NetworkManager.numWriteThreads;
12 - }
12 - // monitorexit(NetworkManager.threadSyncObject)
12 - }
12 - }
12 - if (z11) {
12 - final Object object2 = NetworkManager.threadSyncObject;
12 - synchronized (NetworkManager.threadSyncObject) {
12 - --NetworkManager.numWriteThreads;
12 - // monitorexit(NetworkManager.threadSyncObject)
12 - continue;
12 - }
12 - object1 = NetworkManager.threadSyncObject;
12 - synchronized (NetworkManager.threadSyncObject) {
12 - --NetworkManager.numWriteThreads;
12 - }
12 - // monitorexit(NetworkManager.threadSyncObject)
12 - break;
12 - }
12 - }
12 + synchronized (NetworkManager.threadSyncObject) {
13 +     ++NetworkManager.numWriteThreads;
14 + }
15 + try {
16 +     while (NetworkManager.isRunning(this.netManager)) {
17 +         NetworkManager.sendNetworkPacket(this.netManager);
18 +     }
19 + }
20 + catch (Exception e) {
21 +     e.printStackTrace();
22 + }
23 + synchronized (NetworkManager.threadSyncObject) {
24 +     --NetworkManager.numWriteThreads;
25 + }
